{"version":3,"sources":["components/Login/Login.module.scss","components/Access/Access.module.scss","components/Search/Search.module.scss","components/Loading/Loading.module.scss","assets/image/fingerprint.jpg","components/UserList/UserList.module.scss","components/UserItem/UserItem.module.scss","components/User/User.module.scss","context.js","components/Login/Login.js","components/Loading/Loading.js","components/Access/Access.js","components/Search/Search.js","components/UserItem/UserItem.js","components/UserList/UserList.js","views/SearchView/SearchView.js","components/User/User.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","React","createContext","Login","state","password","isLoggedIn","onChange","e","setState","target","value","Consumer","context","className","styles","wrapper","formWrapper","heading","onSubmit","loginInSystem","form","input","type","name","placeholder","button","Component","Loading","style","loadingWrapper","loadingText","loadingBar","Access","access","accessWrapper","accessText","accessBarRejected","accessBarGranted","Search","username","searchUsers","autoComplete","onClick","logoutSystem","UserItem","login","userItem","to","UserList","userList","users","map","user","key","id","SearchView","User","this","props","getUser","match","params","getRepos","company","location","avatar_url","bio","blog","followers","following","public_repos","public_gists","hireable","userImg","faceImgWrapper","src","alt","fingerImgWrapper","FingerPrint","userInfo","repos","userRepo","repo","href","html_url","goBack","App","loading","a","preventDefault","axios","get","process","CLIENT_ID","SECRET_ID","res","data","items","setTimeout","contextElements","Provider","exact","path","component","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9805896.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__zDerJ\",\"formWrapper\":\"Login_formWrapper__3KlmM\",\"heading\":\"Login_heading__294Pc\",\"form\":\"Login_form__2wnGT\",\"input\":\"Login_input__2wKD7\",\"button\":\"Login_button__5Qi6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Access_wrapper__X9Upr\",\"accessWrapper\":\"Access_accessWrapper__1dbQH\",\"accessBarGranted\":\"Access_accessBarGranted__FdPM1\",\"accessBarRejected\":\"Access_accessBarRejected__2bMAV\",\"accessAnimation\":\"Access_accessAnimation__IgwGC\",\"accessText\":\"Access_accessText__2f370\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Search_heading__3TtzN\",\"input\":\"Search_input__3eb4Z\",\"button\":\"Search_button__2uV7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loading_wrapper__O7Nbg\",\"loadingWrapper\":\"Loading_loadingWrapper__WAwxB\",\"loadingBar\":\"Loading_loadingBar__1rap3\",\"loadingAnimation\":\"Loading_loadingAnimation__16ivY\",\"loadingText\":\"Loading_loadingText__1NTWq\"};","module.exports = __webpack_public_path__ + \"static/media/fingerprint.acbafeb0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"UserList_userList__3-a8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"UserItem_userItem__2_zuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__11ifR\",\"userImg\":\"User_userImg__24_cL\",\"userInfo\":\"User_userInfo__3ixmL\",\"userRepo\":\"User_userRepo__16udu\",\"faceImgWrapper\":\"User_faceImgWrapper__2NvU7\",\"fingerImgWrapper\":\"User_fingerImgWrapper__fe_Pf\",\"heading\":\"User_heading__1ktOK\",\"goBack\":\"User_goBack__1Lc1-\"};","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React, { Component } from 'react';\r\nimport styles from './Login.module.scss';\r\nimport AppContext from '../../context';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    password: '',\r\n    isLoggedIn: false,\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {context => (\r\n          <div className={styles.wrapper}>\r\n            <div className={styles.formWrapper}>\r\n              <h1 className={styles.heading}>System login</h1>\r\n              <form\r\n                onSubmit={e => context.loginInSystem(e, this.state.password)}\r\n                className={styles.form}\r\n              >\r\n                <input\r\n                  className={styles.input}\r\n                  type='password'\r\n                  name='password'\r\n                  placeholder='password'\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                ></input>\r\n                <button className={styles.button} type='submit'>\r\n                  Confirm\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport style from './Loading.module.scss';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n    <div className={style.loadingWrapper}>\r\n      <span className={style.loadingText}>LOADING...</span>\r\n      <div className={style.loadingBar}></div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport style from './Access.module.scss';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst Access = ({ access }) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n    <div className={style.accessWrapper}>\r\n      <span className={style.accessText}>{access === 'rejected' ? 'REJECTED' : 'GRANTED'}</span>\r\n      <div className={access === 'rejected' ? style.accessBarRejected : style.accessBarGranted}></div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Access.defaultProps = {\r\n//   access: 'granted'\r\n// }\r\n\r\n// Access.propTypes = {\r\n//   access: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default Access;","import React, { Component } from 'react';\r\nimport styles from './Search.module.scss';\r\nimport AppContext from '../../context';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    username: ''\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {context => (\r\n          <>\r\n            <h2 className={styles.heading}>Search hackers</h2>\r\n            <form\r\n              onSubmit={e => context.searchUsers(e, this.state.username)}\r\n              className={styles.form}\r\n              autoComplete=\"off\"\r\n            >\r\n              <input\r\n                className={styles.input}\r\n                type='text'\r\n                name='text'\r\n                placeholder='hacker name...'\r\n                onChange={this.onChange}\r\n                value={this.state.username}\r\n                autoComplete=\"off\"\r\n              ></input>\r\n              <button className={styles.button} type='submit'>\r\n                Search\r\n              </button>\r\n            </form>\r\n            <button className={styles.button} onClick={context.logoutSystem}>Logout</button>\r\n          </>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport styles from './UserItem.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst UserItem = ({login}) => {\r\n  return (\r\n    <NavLink className={styles.userItem} to={`/users/${login}`}>{login}</NavLink>\r\n  )\r\n}\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport style from './UserList.module.scss';\r\nimport AppContext from '../../context';\r\nimport UserItem from '../UserItem/UserItem';\r\n\r\nconst UserList = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {context => (\r\n        <ul className={style.userList}>\r\n        {context.users.map(user => <UserItem key={user.id} {...user}/>)}\r\n        </ul>\r\n      )}\r\n    </AppContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport Search from '../../components/Search/Search';\r\nimport UserList from '../../components/UserList/UserList';\r\n\r\nconst SearchView = () => {\r\n  return (\r\n  <>\r\n    <Search />\r\n    <UserList />\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SearchView;","import React, { Component } from 'react';\r\nimport styles from './User.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport FingerPrint from '../../assets/image/fingerprint.jpg';\r\n\r\nclass User extends Component {\r\n  componentDidMount() {\r\n    this.props.getUser(this.props.match.params.login);\r\n    this.props.getRepos(this.props.match.params.login);\r\n  }\r\n\r\n  static propTypes = {\r\n    getUser: PropTypes.func.isRequired,\r\n    getRepos: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n  }\r\n  \r\n  render() {\r\n    const { name, company, location, avatar_url, bio, blog, followers, following, public_repos, public_gists, hireable } = this.props.user;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.userImg}>\r\n          <div className={styles.faceImgWrapper}>\r\n            <img src={avatar_url} alt={name}/>\r\n          </div>\r\n          <div className={styles.fingerImgWrapper}>\r\n            <img src={FingerPrint} alt=\"finger print\"></img>\r\n            <img src={FingerPrint} alt=\"finger print\"></img>\r\n          </div>\r\n        </div>\r\n        <div className={styles.userInfo}>\r\n          <h2 className={styles.heading}>Person information</h2>\r\n          <p><strong>Name: </strong>{name}</p>\r\n          <p><strong>Company: </strong>{company}</p>\r\n          <p><strong>Location: </strong>{location}</p>\r\n          <p><strong>Bio: </strong>{bio}</p>\r\n          <p><strong>Website: </strong>{blog}</p>\r\n          <p><strong>Followers: </strong>{followers}</p>\r\n          <p><strong>Following: </strong>{following}</p>\r\n          <p><strong>Public repos: </strong>{public_repos}</p>\r\n          <p><strong>Public gists: </strong>{public_gists}</p>\r\n          <p><strong>Hireable: </strong>{hireable ? 'Yes' : 'No'}</p>\r\n        </div>\r\n        {this.props.repos && (\r\n        <div className={styles.userRepo}>\r\n          <h2 className={styles.heading}>Repositorium</h2>\r\n          { this.props.repos.map(repo => (\r\n            <p key={repo.id}><a href={repo.html_url}>{repo.name}</a></p>\r\n          ))}\r\n        </div>)}\r\n        <Link className={styles.goBack} to=\"/\">Go back</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppContext from './context';\nimport Login from './components/Login/Login';\nimport Loading from './components/Loading/Loading';\nimport Access from './components/Access/Access';\nimport SearchView from './views/SearchView/SearchView';\n// import UserView from './views/UserView/UserView';\nimport User from './components/User/User';\n\nclass App extends Component {\n  state = {\n    users: [],\n    user: {},\n    repos: [],\n    isLoggedIn: false,\n    loading: false,\n    access: null\n  }\n\n  searchUsers = async (e,username) => {\n    e.preventDefault();\n\n    if(username === ''){\n      this.setState({\n        access: 'rejected'\n      });\n    } else {\n      const res= await axios.get(`https://api.github.com/search/users?q=${username}&client_id=${process.env.CLIENT_ID}&client_secret=${process.env.SECRET_ID}`);\n\n      this.setState({\n        users: res.data.items,\n        loading: true\n      })\n    }\n\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        access: null\n      });\n    }, 2000)\n  }\n\n  getUser = async (username) => {\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.CLIENT_ID}&client_secret=${process.env.SECRET_ID}`);\n\n    this.setState({\n      user: res.data\n    })\n  }\n\n  getRepos = async (username) => {\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.CLIENT_ID}&client_secret=${process.env.SECRET_ID}`);\n\n    this.setState({\n      repos: res.data\n    })\n  }\n\n\n  loginInSystem = (e,password) => {\n    e.preventDefault();\n\n    if(password === 'qwerty') {\n      this.setState({\n        isLoggedIn: true,\n        access: 'granted'\n      })\n    } else {\n      this.setState({\n        access: 'rejected'\n      })\n    }\n    \n    setTimeout(() => {\n      this.setState({\n        access: null,\n      })\n    }, 2000);\n  }\n\n logoutSystem = () => {\n   this.setState({\n    users: [],\n    user: {},\n    repos: [],\n    isLoggedIn: false,\n   })\n }\n\n  render(){\n    const contextElements = {\n      ...this.state,\n      loginInSystem: this.loginInSystem,\n      logoutSystem: this.logoutSystem,\n      searchUsers: this.searchUsers,\n    }\n\n    const { user, repos, isLoggedIn, loading, access } = this.state;\n\n    return (\n      <Router>\n        <AppContext.Provider value={contextElements}>\n          { loading && <Loading /> }\n          { !isLoggedIn && <Login /> } \n          { access === 'granted' ? <Access access={access} /> : access === 'rejected' ? <Access access={access} /> : null}\n          <Switch>\n            <Route exact path=\"/\" component={SearchView} />\n            <Route path=\"/users/:login\" render={props => (\n              <User {...props} getUser={this.getUser} getRepos={this.getRepos} user={user} repos={repos}/>\n            )} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}